version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: inboxguard-api
    container_name: inboxguard-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
  
  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: inboxguard-worker
    container_name: inboxguard-worker
    restart: unless-stopped
    command: celery -A app.worker.celery_app worker --loglevel=info
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "celery", "-A", "app.worker.celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
  
  redis:
    image: redis:7-alpine
    container_name: inboxguard-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  redis-data: